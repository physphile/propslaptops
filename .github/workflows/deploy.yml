name: Deploy to Yandex Cloud COI VM

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  CR_REGISTRY: ${{ secrets.YC_CONTAINER_REGISTRY }}
  FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
  DEPLOY_SA_ID: ${{ secrets.YC_DEPLOY_SA_ID }}
  RUNTIME_SA_ID: ${{ secrets.YC_RUNTIME_SA_ID }}
  IMAGE_TAG: ${{ github.event.release.tag_name }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD | urlencode }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get Yandex Cloud IAM token
        id: get-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: iam
          password: ${{ steps.get-iam-token.outputs.token }}

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.event.release.tag_name }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/propslaptops:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/propslaptops:$IMAGE_TAG

      - name: Deploy to COI VM
        uses: yc-actions/yc-coi-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ env.FOLDER_ID }}
          vm-name: propslaptops
          vm-service-account-id: ${{ env.RUNTIME_SA_ID }}
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-zone-id: 'ru-central1-b'
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          vm-public-ip: ${{ secrets.YC_PUBLIC_IP }}
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml' 